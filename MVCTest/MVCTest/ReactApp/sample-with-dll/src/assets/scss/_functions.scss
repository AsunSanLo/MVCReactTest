$html-font-size: 100%;
$rems-on: true;
$media-query-units: rem !default;
$browser-default-font-size: 16px !default;
$rems-base-font-size: $browser-default-font-size / 100% * $html-font-size !default;

@function calc-size($key, $multiplier: 1) {
	@return map-get($sizes, $key) * $multiplier;
}

@function get-size($key) {
	@return map-get($sizes, $key);
}

@function z($layer) {
	@return map-get($z-layers, $layer);
}

@function fs($font-size) {
	@return map-get($size-vars, $font-size);
}

@function get-color($name) {
	@return map_get($brand-colors, $name);
}

@function strip-unit($number) {
	@if type-of($number) =='number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}
	@return $number;
}

@function rem($size) {
	$html-font-size-units: if(str-index(#{$html-font-size}, 'px'), px, '%');
	$unitless: strip-unit($size);
	$unitless-base: strip-unit(if($html-font-size-units==px, $html-font-size, $rems-base-font-size));
	@if $rems-on {
		@if str-index(#{$size}, 'px') {
			@return ($unitless / $unitless-base * 1rem);
		}
		@else if str-index(#{$size}, 'rem') {
			@return $size;
		}
	}
	@else {
		@if str-index(#{$size}, 'px') {
			@return $size;
		}
		@else if str-index(#{$size}, 'rem') {
			@return $unitless * $unitless-base * 1px;
		}
	}
}

@function em($size) {
	$size: if(str-index(#{$size}, 'rem'), rem($size, true), $size);
	$unitless: strip-unit($size);
	$unitless-base: strip-unit($browser-default-font-size);
	@if $media-query-units==em {
		@return $unitless / $unitless-base * 1em;
	}
	@else {
		@return $size;
	}
}
